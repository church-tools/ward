@use "button" as *;
@use "font";
@use "input";
@use "shadow";
@use "color";
@use "animation";
@use "card";
@use 'sass:map';
@use 'sass:color' as sassColor;

button, .button {
    text-decoration: none !important;
    width: 100%;
    min-height: 2.25rem;
    box-sizing: border-box;
    transition: all animation.$duration ease;
    flex-wrap: nowrap;
    text-wrap: nowrap;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-family: font.$family;
    font-weight: font.$weight;
    font-size: font.$size;
    gap: 0.5rem;
    border-radius: $border-radius;
    border: none;
    padding: 0.125rem 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    cursor: pointer;

    &.accent-btn { @extend .#{"" + color.$accent}-btn; }

    &:disabled, &.disabled {
        cursor: not-allowed;
        color: $color-disabled;
        background-color: $background-disabled;
        &.form {
            background-color: input.$disabled-background-color;
            color: input.$disabled-border-color;
            border: 1px solid input.$disabled-border-color;
        }
    }
    &.primary {
        font-weight: font.$weight-md;
        &:not(:disabled):not(.disabled) {
            color: font.$color-inverse;
            @include shadow.box(2);
            &:hover, &:focus {
                color: font.$color-inverse;
            }
        }
        @each $color in color.$names {
            &.#{"" + $color}-btn {
                &:not(:disabled):not(.disabled) {
                    $value: map.get(color.$foregrounds, $color);
                    background-color: $value;
                    &:hover { 
                        background-color: color-mix(in srgb, $value, white 20%);
                    }
                    &:active {
                        background-color: color-mix(in srgb, $value, white 40%);
                    }
                }
            }
        }
    }
    
    &.secondary {
        &:not(:disabled):not(.disabled) {
            border-style: solid;
            border-width: 1px;
            border-color: input.$border-color-transparent;
            color: font.$color;
            background-color: card.$background-transparent-color;
            @include shadow.box(1);
            &:hover, &:focus { color: font.$color; }
            &:hover {
                background-color: card.$hover-background-transparent-color;
            }
            &:active {
                background-color: card.$active-background-transparent-color;
            }
        }
    }
    
    &.subtle {
        background-color: transparent;
        border: none;
        &:disabled, &.disabled {
            color: font.$color-muted;
        }
        &:not(:disabled):not(.disabled) {
            color: font.$color;
            &:focus, &:hover {
                background-color: font.$color-alpha-10;
            }
            &:active {
                background-color: font.$color-alpha-20;
            }
        }
        &.invert {
            color: font.$color-inverse;
            &:hover {
                background-color: font.$color-inverse-alpha-10;
            }
            &:active {
                background-color: font.$color-inverse-alpha-20;
            }
        }
    }
    &.subtle-with-gap {
        background-color: transparent;
        border: none;
        &::after {
            content: "";
            position: absolute;
            top: 0.5rem;
            left: 0.5rem;
            right: 0.5rem;
            bottom: 0.5rem;
            border-radius: $border-radius;
            transition: all animation.$duration ease;
        }
        &:disabled, &.disabled {
            color: font.$color-muted;
        }
        &:not(:disabled):not(.disabled) {
            color: font.$color;
            &:focus, &:hover {
                &::after {
                    background-color: font.$color-alpha-10;
                }
            }
            &:active {
                &::after {
                    background-color: font.$color-alpha-20;
                }
            }
        }
    }
    
    &.form {
        &:disabled, &.disabled {
            background-color: input.$disabled-background-color;
            color: input.$disabled-border-color;
            border: 1px solid input.$disabled-border-color;
        }
        &:not(:disabled):not(.disabled) {
            font: font.$color;
            border: input.$border;
            border-color: input.$border-color;
            background-color: input.$background-color;
            &:hover {
                border-color: input.$hover-border-color;
            }
            &:active {
                border-color: input.$hover-border-color;
            }
        }
    }
    
    &.icon-colored {
        @each $color in color.$names {
            &.#{"" + $color}-btn {
                &:not(:disabled):not(.disabled) {
                    app-icon {
                        color: map.get(color.$foregrounds, $color) !important;
                    }
                }
            }
        }
    }
    &.large {
        padding: 0.25rem 0.875rem;
        min-height: 3.25rem;
        font-size: font.$size-lg;
        border-radius: card.$border-radius;
        app-icon {
            font-size: 30px;
            min-height: 30px;
            min-width: 30px;
        }
    }
    &.small {
        @include font.small;
        padding: 0.125rem 0.5rem;
        min-height: 2rem;
        gap: 0.25rem;
        app-icon {
            font-size: 14px !important;
            min-height: 14px !important;
            min-width: 14px !important;
        }
    }
    &.tiny {
        @include font.tiny;
        padding: 0.125rem 0.5rem;
        min-height: 1.5rem;
        gap: 0.125rem;
        app-icon {
            font-size: 12px !important;
            min-height: 12px !important;
            min-width: 12px !important;
        }
    }
    &.sharp {
        border-radius: 0;
    }
    &.medium-icon {
        app-icon {
            font-size: 24px;
            min-height: 24px;
            min-width: 24px;
        }
    }
    
}


.active > button, .active > .button {
    background-color: font.$color-alpha-5;
}

.icon-only > button, .icon-only > .button, button.icon-only, .button.icon-only {

    padding: 0.125rem 0.4rem;
    &.large {
        padding: 0.25rem 0.75rem;
        &.medium-icon {
            padding: 0.25rem 0.75rem;
        }
    }
    &.small {
        padding: 0.075rem 0.45rem;
    }
    &.tiny {
        padding: 0.075rem 0.25rem;
    }
    &.narrow {
        min-height: 1.9rem;
        padding: 0.15rem 0.25rem;
        app-icon {
            font-size: 16px !important;
            min-height: 16px !important;
            min-width: 16px !important;
        }
    }
}

.round > button, .round > .button {
    border-radius: card.$border-radius-round;
}