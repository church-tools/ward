@use "animation";

$translation: 1.5rem;

:host {
    @extend .inverse-font-color;
    @extend .center-content;
    @extend .items-center;
    height: 2rem;
    width: 2rem;
    border-radius: 50%;
    font-weight: $weight-md;
    transition: opacity animation.$duration ease;
    &.small {
        @extend .small-text;
        height: 1.5rem;
        width: 1.5rem;
    }
    .count {
        transition: transform animation.$duration animation.$ease-out;
        &.changing {
            transition: none;
        }
    }
    .previous-count {
        position: absolute;
        opacity: 1;
    }
    &.increasing {
        .count.changing { transform: translateY(-$translation); }
        .previous-count {
            @starting-style {
                transform: translateY($translation);
                opacity: 0;
            }
        }
    }
    &:not(.increasing) {
        .count.changing { transform: translateY($translation); }
        .previous-count {
            @starting-style {
                transform: translateY(-$translation);
                opacity: 0;
            }
        }
    }

    &.hidden {
        opacity: 0;
    }
}
