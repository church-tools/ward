@use "layout";
@use "shadow";
@use "card";
@use "animation";

.card-item-container {
    &.cdk-drop-list-dragging .card-item:not(.cdk-drag-placeholder) {
        transition: transform animation.$duration-sm ease;
    }
}

.card-item {
    @include layout.row;
    width: 100%;
    align-items: center;
    box-sizing: border-box;
    transition: all animation.$duration-sm ease, transform 0s;
    
    // Ensure animations don't conflict with dragging
    // &:not(.cdk-drag-animating):not(.cdk-drag-preview) {
    //     // FLIP animations will handle position transforms
    //     will-change: transform;
        
    //     // Don't transition transform here as it's handled by FLIP animation
    //     &:not([style*="transform"]) {
    //         transition: background-color animation.$duration-sm ease, 
    //                     box-shadow animation.$duration-sm ease;
    //     }
    // }
    
    // // During drag operations, disable our custom animations
    // &.cdk-drag-animating, &.cdk-drag-preview {
    //     transition: all animation.$duration-sm ease !important;
    // }
    
    &.hidden {
        opacity: 0;
    }
    .drag-handle {
        opacity: 0.25;
    }
}

.cdk-drag-preview {
    animation: elevate animation.$duration ease;
    background-color: card.$hover-background-color;
    @include shadow.box(8);
}

.cdk-drag-placeholder {
    opacity: 0;
}

.cdk-drag-animating {
    transition: transform animation.$duration-sm ease;
    animation: lower animation.$duration-sm ease;
    background-color: card.$canvas-background-color;
    @include card.shadow;
}

// cdk-drag canvas-card card card-item selectable-card suppress-canvas-card-animation ng-star-inserted cdk-drag-preview cdk-drag-animating

@keyframes elevate {
    0% {
        @include shadow.box(0);
    }
    100% {
        @include shadow.box(8);
        background-color: card.$hover-background-color;
    }
}

@keyframes lower {
    0% {
        @include shadow.box(8);
        background-color: card.$hover-background-color;
    }
    100% {
        @include card.shadow;
        background-color: card.$canvas-background-color;
    }
}